{
   "fun_prefix":"__",
   "options":["enableStrictnessPropagation"],
   "bifs":[
      {
         "sapl_fun":"addI",
         "arity":2,
         "ext_fun":"_add",
         "inline_exp":":!1: + :!2:"
      },
      {
         "sapl_fun":"addR",
         "arity":2,
         "ext_fun":"_add",
         "inline_exp":":!1: + :!2:"
      },	  
      {
         "sapl_fun":"subI",
         "arity":2,
         "ext_fun":"_sub",
         "inline_exp":":!1: - :!2:"
      },
      {
         "sapl_fun":"subR",
         "arity":2,
         "ext_fun":"_sub",
         "inline_exp":":!1: - :!2:"
      },	  
      {
         "sapl_fun":"multI",
         "arity":2,
         "ext_fun":"_mult",
         "inline_exp":":!1: * :!2:"
      },
      {
         "sapl_fun":"multR",
         "arity":2,
         "ext_fun":"_mult",
         "inline_exp":":!1: * :!2:"
      },	  
      {
         "sapl_fun":"divI",
         "arity":2,
         "ext_fun":"_div",
         "inline_exp":"Math.floor(:!1: / :!2:)"
      },
      {
         "sapl_fun":"divR",
         "arity":2,
         "ext_fun":"_divreal",
         "inline_exp":":!1: / :!2:"
      },
      {
         "sapl_fun":"mod",
         "arity":2,
         "ext_fun":"_mod",
         "inline_exp":":!1: % :!2:"
      },
      {
         "sapl_fun":"powI",
         "arity":2,
         "ext_fun":"_pow",
         "inline_exp":"Math.pow(:!1:,:!2:)"
      },
      {
         "sapl_fun":"powR",
         "arity":2,
         "ext_fun":"_pow",
         "inline_exp":"Math.pow(:!1:,:!2:)"
      },
      {
         "sapl_fun":"sqrt",
         "arity":1,
         "ext_fun":"_sqrt",
         "inline_exp":"Math.sqrt(:!1:)"
      },
      {
         "sapl_fun":"tan",
         "arity":1,
         "ext_fun":"_tan",
         "inline_exp":"Math.tan(:!1:)"
      },
      {
         "sapl_fun":"atan",
         "arity":1,
         "ext_fun":"_atan",
         "inline_exp":"Math.atan(:!1:)"
      },
      {
         "sapl_fun":"sin",
         "arity":1,
         "ext_fun":"_sin",
         "inline_exp":"Math.sin(:!1:)"
      },
      {
         "sapl_fun":"asin",
         "arity":1,
         "ext_fun":"_asin",
         "inline_exp":"Math.asin(:!1:)"
      },
      {
         "sapl_fun":"cos",
         "arity":1,
         "ext_fun":"_cos",
         "inline_exp":"Math.cos(:!1:)"
      },
      {
         "sapl_fun":"acos",
         "arity":1,
         "ext_fun":"_acos",
         "inline_exp":"Math.acos(:!1:)"
      },
	  {
         "sapl_fun":"neg",
         "arity":1,
         "ext_fun":"_neg",
         "inline_exp":":!1: * -1"
      },
      {
         "sapl_fun":"negR",
         "arity":1,
         "ext_fun":"_neg",
         "inline_exp":":!1: * -1"
      },
      {
         "sapl_fun":"negI",
         "arity":1,
         "ext_fun":"_neg",
         "inline_exp":":!1: * -1"
      },
	  {
         "sapl_fun":"absI",
         "arity":1,
         "ext_fun":"_abs",
         "inline_exp":"Math.abs(:!1:)"
      },
	  {
         "sapl_fun":"absR",
         "arity":1,
         "ext_fun":"_abs",
         "inline_exp":"Math.abs(:!1:)"
      },
	  {
         "sapl_fun":"eqI",
         "arity":2,
         "ext_fun":"_eq",
         "inline_exp":":!1: == :!2:"
      },
	  {
         "sapl_fun":"eqR",
         "arity":2,
         "ext_fun":"_eq",
         "inline_exp":":!1: == :!2:"
      },
	  {
         "sapl_fun":"eqC",
         "arity":2,
         "ext_fun":"_eq",
         "inline_exp":":!1: == :!2:"
      },
	  {
         "sapl_fun":"eqB",
         "arity":2,
         "ext_fun":"_eq",
         "inline_exp":":!1: == :!2:"
      },
	  {
         "sapl_fun":"eqS",
         "arity":2,
         "ext_fun":"_eq",
         "inline_exp":":!1: == :!2:"
      },	  	  
	  {
         "sapl_fun":"neqI",
         "arity":2,
         "ext_fun":"_neq",
         "inline_exp":":!1: != :!2:"
      },
	  {
         "sapl_fun":"neqR",
         "arity":2,
         "ext_fun":"_neq",
         "inline_exp":":!1: != :!2:"
      },
	  {
         "sapl_fun":"neqC",
         "arity":2,
         "ext_fun":"_neq",
         "inline_exp":":!1: != :!2:"
      },
	  {
         "sapl_fun":"neqB",
         "arity":2,
         "ext_fun":"_neq",
         "inline_exp":":!1: != :!2:"
      },	  
	  {
         "sapl_fun":"gtI",
         "arity":2,
         "ext_fun":"_gt",
         "inline_exp":":!1: > :!2:"
      },
	  {
         "sapl_fun":"gtR",
         "arity":2,
         "ext_fun":"_gt",
         "inline_exp":":!1: > :!2:"
      },
	  {
         "sapl_fun":"gtC",
         "arity":2,
         "ext_fun":"_gt",
         "inline_exp":":!1: > :!2:"
      },
	  {
         "sapl_fun":"geI",
         "arity":2,
         "ext_fun":"_ge",
         "inline_exp":":!1: >= :!2:"
      },
	  {
         "sapl_fun":"geR",
         "arity":2,
         "ext_fun":"_ge",
         "inline_exp":":!1: >= :!2:"
      },
	  {
         "sapl_fun":"geC",
         "arity":2,
         "ext_fun":"_ge",
         "inline_exp":":!1: >= :!2:"
      },
	  {
         "sapl_fun":"ltI",
         "arity":2,
         "ext_fun":"_lt",
         "inline_exp":":!1: < :!2:"
      },
	  {
         "sapl_fun":"ltR",
         "arity":2,
         "ext_fun":"_lt",
         "inline_exp":":!1: < :!2:"
      },
	  {
         "sapl_fun":"ltC",
         "arity":2,
         "ext_fun":"_lt",
         "inline_exp":":!1: < :!2:"
      },	  
	  {
         "sapl_fun":"ltS",
         "arity":2,
         "ext_fun":"_lt",
         "inline_exp":":!1: < :!2:"
      },	  	  
	  {
         "sapl_fun":"not",
         "arity":1,
         "ext_fun":"_not",
         "inline_exp":"!:!1:"
      },
	  {
         "sapl_fun":"and",
         "arity":2,
         "ext_fun":"_and",
         "inline_exp":":!1: && :!2:"
      },
	  {
         "sapl_fun":"or",
         "arity":2,
         "ext_fun":"_or",
         "inline_exp":":!1: || :!2:"
      },
	  {
         "sapl_fun":"I2S",
         "arity":1,
         "ext_fun":"_toString",
         "inline_exp":":!1: + \"\""
      },
	  {
         "sapl_fun":"C2S",
         "arity":1,
         "ext_fun":"_toString",
         "inline_exp":":!1: + \"\""
      },
	  {
         "sapl_fun":"R2S",
         "arity":1,
         "ext_fun":"_toString",
         "inline_exp":":!1: + \"\""
      },
	  {
         "sapl_fun":"string_size",
         "arity":1,
         "ext_fun":"_string_size",
         "inline_exp":":!1:.length"
      },
	  {
         "sapl_fun":"string_usize",
         "arity":1,
         "ext_fun":"_string_usize",
         "inline_exp":"[0, '_Tuple2',:!1:.length,:1:]"
      },	  
	  {
         "sapl_fun":"string_select",
         "arity":2,
         "ext_fun":"_string_select",
         "inline_exp":":!1:.charAt(:!2:)"
      },
	  {
         "sapl_fun":"string_uselect",
         "arity":2,
         "ext_fun":"_string_uselect",
         "inline_exp":"[0, '_Tuple2',:!1:.charAt(:!2:),:1:]"
      },	  
	  {
         "sapl_fun":"string_create1",
         "arity":1,
         "ext_fun":"_string_create1$eval",
		 "inline_exp":"_string_create1(:!1:)"
      },
	  {
         "sapl_fun":"string_create2",
         "arity":2,
         "strict":false,
         "ext_fun":"_string_create2$eval",
		 "inline_exp":"_string_create2(:!1:,:!2:)"		 
      },
	  {
         "sapl_fun":"string_update",
         "arity":3,
         "ext_fun":"_string_update",
         "inline_exp":":!1:.replaceAt(:!2:,:!3:)"
      },
	  {
         "sapl_fun":"string_update_copy",
         "arity":3,
         "ext_fun":"_string_update",
         "inline_exp":":!1:.replaceAt(:!2:,:!3:)"
      },
	  {
         "sapl_fun":"string_slice",
         "arity":3,
         "ext_fun":"_string_slice",
         "inline_exp":":!1:.substr(:!2:,(:!3: - :!2: + 1))"
      },
	  {
         "sapl_fun":"string_append",
         "arity":2,
         "ext_fun":"_string_append",
         "inline_exp":":!1: + :!2:"
      },
	  {
         "sapl_fun":"string_replace",
         "arity":3,
         "ext_fun":"_string_replace$eval",
         "inline_exp":"_string_replace(:!1:,:!2:,:!3:)"
      },
	  {
         "sapl_fun":"C2I",
         "arity":1,
         "ext_fun":"_toInt_char",
         "inline_exp":":!1:.charCodeAt(0)"
      },
	  {
         "sapl_fun":"S2I",
         "arity":1,
         "ext_fun":"_toInt_str",
         "inline_exp":"parseInt(:!1:)"
      },
	  {
         "sapl_fun":"R2I",
         "arity":1,
         "ext_fun":"_toInt_real",
         "inline_exp":"Math.floor(:!1:)"
      },
	  {
         "sapl_fun":"I2R",
         "arity":1,
         "ext_fun":"_toReal",
         "inline_exp":"parseFloat(:!1:)"
      },
	  {
         "sapl_fun":"R2R",
         "arity":1,
         "ext_fun":"_toReal",
         "inline_exp":"parseFloat(:!1:)"
      },
	  {
         "sapl_fun":"S2R",
         "arity":1,
         "ext_fun":"_toReal",
         "inline_exp":"parseFloat(:!1:)"
      },
	  {
         "sapl_fun":"I2C",
         "arity":1,
         "ext_fun":"_toChar",
         "inline_exp":"String.fromCharCode(:!1:)"
      },
	  {
         "sapl_fun":"bitand",
         "arity":2,
         "ext_fun":"_bitand",
         "inline_exp":":!1: & :!2:"
      },
	  {
         "sapl_fun":"bitor",
         "arity":2,
         "ext_fun":"_bitor",
         "inline_exp":":!1: | :!2:"
      },
	  {
         "sapl_fun":"bitxor",
         "arity":2,
         "ext_fun":"_bitor",
         "inline_exp":":!1: ^ :!2:"
      },
	  {
         "sapl_fun":"bitnot",
         "arity":1,
         "ext_fun":"_bitnot",
         "inline_exp":"~ :!1:"
      },	  	  	  
	  {
         "sapl_fun":"shiftleft",
         "arity":2,
         "ext_fun":"_shiftleft",
         "inline_exp":":!1: << :!2:"
      },
	  {
         "sapl_fun":"shiftright",
         "arity":2,
         "ext_fun":"_shiftright",
         "inline_exp":":!1: >>> :!2:"
      },
	  {
         "sapl_fun":"array_create1",
         "arity":1,
         "ext_fun":"_array_create1$eval",
		 "inline_exp":"_array_create1(:!1:)"
      },
	  {
         "sapl_fun":"array_create1_lazy",
         "arity":1,
         "ext_fun":"_array_create1$eval",
		 "inline_exp":"_array_create1(:!1:)"
      },
	  {
         "sapl_fun":"array_create1_B_I",
         "arity":1,
         "ext_fun":"_array_create1$eval",
		 "inline_exp":"_array_create1(:!1:)"
      },
	  {
         "sapl_fun":"array_create1_B_R",
         "arity":1,
         "ext_fun":"_array_create1$eval",
		 "inline_exp":"_array_create1(:!1:)"
      },
	  {
         "sapl_fun":"array_create1_B_B",
         "arity":1,
         "ext_fun":"_array_create1$eval",
		 "inline_exp":"_array_create1(:!1:)"
      },
	  {
         "sapl_fun":"array_create2",
         "arity":2,
         "ext_fun":"_array_create2$eval",
		 "inline_exp":"_array_create2(:!1:,:!2:)"
      },
	  {
         "sapl_fun":"array_create2_B_I",
         "arity":2,
         "ext_fun":"_array_create2$eval",
		 "inline_exp":"_array_create2(:!1:,:!2:)"
      },
	  {
         "sapl_fun":"array_create2_B_R",
         "arity":2,
         "ext_fun":"_array_create2$eval",
		 "inline_exp":"_array_create2(:!1:,:!2:)"
      },
	  {
         "sapl_fun":"array_create2_B_B",
         "arity":2,
         "ext_fun":"_array_create2$eval",
		 "inline_exp":"_array_create2(:!1:,:!2:)"
      },	  
	  {
         "sapl_fun":"array_create2_lazy",
         "arity":2,
         "ext_fun":"_array_create2_lazy$eval",
		 "inline_exp":"_array_create2(:!1:,:2:)"		 
      },	  
	  {
         "sapl_fun":"array_update_lazy",
         "arity":3,
         "ext_fun":"_array_update_lazy$eval",
		 "inline_exp":"_array_update(:!1:,:!2:,:3:)"
      },		  
	  {
         "sapl_fun":"array_update",
         "arity":3,
         "ext_fun":"_array_update$eval",
		 "inline_exp":"_array_update(:!1:,:!2:,:!3:)"
      },		  	  
	  {
         "sapl_fun":"array_update_B_I",
         "arity":3,
         "ext_fun":"_array_update$eval",
		 "inline_exp":"_array_update(:!1:,:!2:,:!3:)"
      },		  	  
	  {
         "sapl_fun":"array_update_B_R",
         "arity":3,
         "ext_fun":"_array_update$eval",
		 "inline_exp":"_array_update(:!1:,:!2:,:!3:)"
      },
	  {
         "sapl_fun":"array_update_B_B",
         "arity":3,
         "ext_fun":"_array_update$eval",
		 "inline_exp":"_array_update(:!1:,:!2:,:!3:)"
      },		  	  	  
	  {
         "sapl_fun":"array_replace_lazy",
         "arity":3,
         "ext_fun":"_array_replace_lazy$eval",
		 "inline_exp":"_array_replace(:!1:,:!2:,:3:)"
      },	  
	  {
         "sapl_fun":"array_replace",
         "arity":3,
         "ext_fun":"_array_replace$eval",
		 "inline_exp":"_array_replace(:!1:,:!2:,:!3:)"
      },
	  {
         "sapl_fun":"array_replace_B_I",
         "arity":3,
         "ext_fun":"_array_replace$eval",
		 "inline_exp":"_array_replace(:!1:,:!2:,:!3:)"
      },
	  {
         "sapl_fun":"array_replace_B_R",
         "arity":3,
         "ext_fun":"_array_replace$eval",
		 "inline_exp":"_array_replace(:!1:,:!2:,:!3:)"
      },
	  {
         "sapl_fun":"array_replace_B_B",
         "arity":3,
         "ext_fun":"_array_replace$eval",
		 "inline_exp":"_array_replace(:!1:,:!2:,:!3:)"
      },	  
	  {
         "sapl_fun":"array_select_lazy",
         "arity":2,
         "ext_fun":"_array_select_lazy",
		 "inline_exp":"Sapl.feval(:!1:[:!2:+2])"
      },	  
	  {
         "sapl_fun":"array_select",
         "arity":2,
         "ext_fun":"_array_select",
		 "inline_exp":":!1:[:!2:+2]"
      },
	  {
         "sapl_fun":"array_select_B_I",
         "arity":2,
         "ext_fun":"_array_select",
		 "inline_exp":":!1:[:!2:+2]"
      },
	  {
         "sapl_fun":"array_select_B_R",
         "arity":2,
         "ext_fun":"_array_select",
		 "inline_exp":":!1:[:!2:+2]"
      },
	  {
         "sapl_fun":"array_select_B_B",
         "arity":2,
         "ext_fun":"_array_select",
		 "inline_exp":":!1:[:!2:+2]"
      },	  
	  {
         "sapl_fun":"array_uselect_lazy",
         "arity":2,
         "ext_fun":"_array_uselect",
		 "inline_exp":"[0, '_Tuple2',:!1:[:!2:+2],:1:]"
      },	  
	  {
         "sapl_fun":"array_uselect",
         "arity":2,
         "ext_fun":"_array_uselect",
		 "inline_exp":"[0, '_Tuple2',:!1:[:!2:+2],:1:]"
      },	  
	  {
         "sapl_fun":"array_uselect_B_I",
         "arity":2,
         "ext_fun":"_array_uselect",
		 "inline_exp":"[0, '_Tuple2',:!1:[:!2:+2],:1:]"
      },	  
	  {
         "sapl_fun":"array_uselect_B_B",
         "arity":2,
         "ext_fun":"_array_uselect",
		 "inline_exp":"[0, '_Tuple2',:!1:[:!2:+2],:1:]"
      },
	  {
         "sapl_fun":"array_uselect_B_R",
         "arity":2,
         "ext_fun":"_array_uselect",
		 "inline_exp":"[0, '_Tuple2',:!1:[:!2:+2],:1:]"
      },	  	  
	  {
         "sapl_fun":"array_size_lazy",
         "arity":1,
         "ext_fun":"_array_size",
		 "inline_exp":":!1:.length-2"
      },	  
	  {
         "sapl_fun":"array_size",
         "arity":1,
         "ext_fun":"_array_size",
		 "inline_exp":":!1:.length-2"
      },	  
	  {
         "sapl_fun":"array_size_B_I",
         "arity":1,
         "ext_fun":"_array_size",
		 "inline_exp":":!1:.length-2"
      },	  
	  {
         "sapl_fun":"array_size_B_B",
         "arity":1,
         "ext_fun":"_array_size",
		 "inline_exp":":!1:.length-2"
      },	  
	  {
         "sapl_fun":"array_size_B_R",
         "arity":1,
         "ext_fun":"_array_size",
		 "inline_exp":":!1:.length-2"
      },	  
	  {
         "sapl_fun":"array_usize_lazy",
         "arity":1,
         "ext_fun":"_array_usize",
		 "inline_exp":"[0, '_Tuple2',:!1:.length-2,:1:]"
      },	  	  
	  {
         "sapl_fun":"array_usize",
         "arity":1,
         "ext_fun":"_array_usize",
		 "inline_exp":"[0, '_Tuple2',:!1:.length-2,:1:]"
      },
	  {
         "sapl_fun":"array_usize_B_I",
         "arity":1,
         "ext_fun":"_array_usize",
		 "inline_exp":"[0, '_Tuple2',:!1:.length-2,:1:]"
      },	  	  
	  {
         "sapl_fun":"array_usize_B_B",
         "arity":1,
         "ext_fun":"_array_usize",
		 "inline_exp":"[0, '_Tuple2',:!1:.length-2,:1:]"
      },	  	  
	  {
         "sapl_fun":"array_usize_B_R",
         "arity":1,
         "ext_fun":"_array_usize",
		 "inline_exp":"[0, '_Tuple2',:!1:.length-2,:1:]"
      },	  	  
	  {
         "sapl_fun":"abort",
         "arity":1,
         "strict":false,
         "ext_fun":"_abort"
      },
	  {
         "sapl_fun":"error",
         "arity":1,
         "strict":false,
         "ext_fun":"_error"
      },
	  {
         "sapl_fun":"tupsels1v0",
         "arity":1,
         "ext_fun":"_tupsels1v0",
		 "inline_exp":"Sapl.feval(:!1:[2])"
      },
	  {
         "sapl_fun":"tupsels2v0",
         "arity":1,
         "ext_fun":"_tupsels2v0",
		 "inline_exp":"Sapl.feval(:!1:[2])"
      },
	  {
         "sapl_fun":"tupsels2v1",
         "arity":1,
         "ext_fun":"_tupsels2v1",
		 "inline_exp":"Sapl.feval(:!1:[3])"
      },
	  {
         "sapl_fun":"tupsels3v0",
         "arity":1,
         "ext_fun":"_tupsels3v0",
		 "inline_exp":"Sapl.feval(:!1:[2])"
      },
	  {
         "sapl_fun":"tupsels3v1",
         "arity":1,
         "ext_fun":"_tupsels3v1",
		 "inline_exp":"Sapl.feval(:!1:[3])"
      },
	  {
         "sapl_fun":"tupsels3v2",
         "arity":1,
         "ext_fun":"_tupsels3v2",
		 "inline_exp":"Sapl.feval(:!1:[4])"
      },
	  {
         "sapl_fun":"tupsels4v0",
         "arity":1,
         "ext_fun":"_tupsels4v0",
		 "inline_exp":"Sapl.feval(:!1:[2])"
      },
	  {
         "sapl_fun":"tupsels4v1",
         "arity":1,
         "ext_fun":"_tupsels4v1",
		 "inline_exp":"Sapl.feval(:!1:[3])"
      },
	  {
         "sapl_fun":"tupsels4v2",
         "arity":1,
         "ext_fun":"_tupsels4v2",
		 "inline_exp":"Sapl.feval(:!1:[4])"
      },	  
	  {
         "sapl_fun":"tupsels4v3",
         "arity":1,
         "ext_fun":"_tupsels4v3",
		 "inline_exp":"Sapl.feval(:!1:[5])"
      }
   ]
}
