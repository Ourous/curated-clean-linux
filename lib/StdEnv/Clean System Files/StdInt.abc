.comp 920 0001100110100
.start _nostart_
.depend "_SystemArray"
.depend "StdArray"
.depend "StdClass"
.depend "StdChar"
.depend "StdBool"
.depend "StdMisc"
.depend "StdOverloaded"
.depend "StdInt"
.endinfo
.module m_StdInt "StdInt"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod _SystemArray
.impmod StdChar
.implab e_StdChar_s==;18
.impmod StdBool
.implab e_StdBool_snot
.impmod StdMisc
.implab e_StdMisc_sabort
.export e_StdInt_slcm;30
.descexp e_StdInt_dlcm;30 e_StdInt_nlcm;30 e_StdInt_llcm;30 2 0 "lcm;30"
.pb "lcm;30"
.o 3 0
e_StdInt_ilcm;30
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jsr s31
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 0 a31 e_StdInt_ilcm;30
.o 2 0
e_StdInt_llcm;30
	repl_args 1 1
.o 2 0
.pn
a31
.d 2 0
	jsr ea31
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_dlcm;30
.o 1 0
e_StdInt_nlcm;30
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea31
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea31
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_slcm;30
.o 0 2 ii
s31
	eqI_b 0 1
	jmp_true case.1
	jmp case.2
case.1
	pop_b 2
	pushI 0
.d 0 1 i
	rtn
case.2
	eqI_b 0 0
	jmp_true case.3
	jmp case.4
case.3
	pop_b 2
	pushI 0
.d 0 1 i
	rtn
case.4
	push_b 1
	push_b 1
.d 0 2 ii
	jsr s30
.o 0 1 i
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	divI

	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 2
	updatepop_b 0 1
	mulI

.d 0 1 i
	jmp s14
.pe
.export e_StdInt_sgcd;29
.descexp e_StdInt_dgcd;29 e_StdInt_ngcd;29 e_StdInt_lgcd;29 2 0 "gcd;29"
.pb "gcd;29"
.o 3 0
e_StdInt_igcd;29
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jsr s30
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 0 a30 e_StdInt_igcd;29
.o 2 0
e_StdInt_lgcd;29
	repl_args 1 1
.o 2 0
.pn
a30
.d 2 0
	jsr ea30
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_dgcd;29
.o 1 0
e_StdInt_ngcd;29
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea30
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea30
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_sgcd;29
.o 0 2 ii
s30
	push_b 1
.d 0 1 i
	jsr s14
.o 0 1 i
	push_b 1
.d 0 1 i
	jsr s14
.o 0 1 i
	update_b 1 3
	updatepop_b 0 2
.d 0 2 ii
	jmp s33
.pe
.pb "gcdnat;32"
.o 0 2 ii
s33
	eqI_b 0 1
	jmp_true case.5
	jmp case.6
case.5
	update_b 0 1
	pop_b 1
.d 0 1 i
	rtn
case.6
	push_b 1
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	remI

	push_b 1
	update_b 1 2
	updatepop_b 0 1
.d 0 2 ii
	jmp s33
.pe
.export e_StdInt_srem;28
.descexp e_StdInt_drem;28 e_StdInt_nrem;28 e_StdInt_lrem;28 2 0 "rem;28"
.pb "rem;28"
.o 3 0
e_StdInt_irem;28
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jsr s29
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 0 a29 e_StdInt_irem;28
.o 2 0
e_StdInt_lrem;28
	repl_args 1 1
.o 2 0
.pn
a29
.d 2 0
	jsr ea29
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_drem;28
.o 1 0
e_StdInt_nrem;28
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea29
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea29
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_srem;28
.o 0 2 ii
s29
.inline rem;28
	remI
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_sfromInt;27
.descexp e_StdInt_dfromInt;27 e_StdInt_nfromInt;27 e_StdInt_lfromInt;27 1 0 "fromInt;27"
.pb "fromInt;27"
.o 1 1 i
e_StdInt_ifromInt;27
	pop_a 1
.d 0 1 i
	jsr s28
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pld
.ai 1 _ e_StdInt_ifromInt;27
.o 2 0
e_StdInt_lfromInt;27
	pop_a 1
.d 1 0
	jsr ea28
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dfromInt;27
.o 1 0
e_StdInt_nfromInt;27
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea28
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
.pn
ea28
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_sfromInt;27
.o 0 1 i
s28
.inline fromInt;27
.d 0 1 i
	jsr ItoAC
.o 1 0
.end

.d 1 0
	rtn
.pe
.export e_StdInt_sfromInt;26
.descexp e_StdInt_dfromInt;26 e_StdInt_nfromInt;26 e_StdInt_lfromInt;26 1 0 "fromInt;26"
.pb "fromInt;26"
.o 1 1 i
e_StdInt_ifromInt;26
	pop_a 1
.d 0 1 i
	jsr s27
.o 0 1 r
	buildR_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 1 _ e_StdInt_ifromInt;26
.o 2 0
e_StdInt_lfromInt;26
	pop_a 1
.d 1 0
	jsr ea27
.o 0 1 r
	buildR_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dfromInt;26
.o 1 0
e_StdInt_nfromInt;26
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea27
.o 0 1 r
	fillR_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea27
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_sfromInt;26
.o 0 1 i
s27
.inline fromInt;26
	ItoR
.end

.d 0 1 r
	rtn
.pe
.export e_StdInt_sfromInt;25
.descexp e_StdInt_dfromInt;25 e_StdInt_nfromInt;25 e_StdInt_lfromInt;25 1 0 "fromInt;25"
.pb "fromInt;25"
.o 1 1 i
e_StdInt_ifromInt;25
	pop_a 1
.d 0 1 i
	jsr s26
.o 0 1 c
	buildC_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 1 _ e_StdInt_ifromInt;25
.o 2 0
e_StdInt_lfromInt;25
	pop_a 1
.d 1 0
	jsr ea26
.o 0 1 c
	buildC_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dfromInt;25
.o 1 0
e_StdInt_nfromInt;25
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea26
.o 0 1 c
	fillC_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea26
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_sfromInt;25
.o 0 1 i
s26
.inline fromInt;25
	ItoC
.end

.d 0 1 c
	rtn
.pe
.export e_StdInt_sfromInt;24
.descexp e_StdInt_dfromInt;24 e_StdInt_nfromInt;24 e_StdInt_lfromInt;24 1 0 "fromInt;24"
.pb "fromInt;24"
.o 1 1 i
e_StdInt_ifromInt;24
	pop_a 1
.d 0 1 i
	jsr s25
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 1 _ e_StdInt_ifromInt;24
.o 2 0
e_StdInt_lfromInt;24
	pop_a 1
.d 1 0
	jsr ea25
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dfromInt;24
.o 1 0
e_StdInt_nfromInt;24
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea25
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea25
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_sfromInt;24
.o 0 1 i
s25
.inline fromInt;24
	no_op
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_stoInt;23
.descexp e_StdInt_dtoInt;23 e_StdInt_ntoInt;23 e_StdInt_ltoInt;23 1 0 "toInt;23"
.pb "toInt;23"
.o 2 0
e_StdInt_itoInt;23
	pop_a 1
	push_array 0
	update_a 0 1
	pop_a 1
.d 1 0
	jmp s24
.pld
.ai 1 _ e_StdInt_itoInt;23
.o 2 0
e_StdInt_ltoInt;23
	pop_a 1
.d 1 0
	jsr ea24
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dtoInt;23
.o 1 0
e_StdInt_ntoInt;23
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea24
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea24
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 1 0
e_StdInt_stoInt;23
.o 1 0
s24
	push_a 0
	push_arraysize CHAR 0 1
	pushI 0
	push_b 1
	eqI

	jmp_false else.7
	pop_a 1
	pop_b 1
	pushI 0
.d 0 1 i
	rtn
else.7
	pushI 0
	push_a 0
	select CHAR 0 1
	pushC '-'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.8
	push_a 0
	pushI 0
	pushI 1
	push_b 2
	update_b 2 3
	update_b 1 2
	updatepop_b 0 1
	updatepop_a 0 1
.d 1 3 iii
	jsr s34
.o 0 1 i
	negI

.d 0 1 i
	rtn
else.8
	pushI 0
	push_a 0
	select CHAR 0 1
	pushC '+'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.9
	push_a 0
	pushI 0
	pushI 1
	push_b 2
	updatepop_a 0 1
	update_b 2 3
	update_b 1 2
	updatepop_b 0 1
.d 1 3 iii
	jmp s34
else.9
	push_a 0
	pushI 0
	pushI 0
	push_b 2
	updatepop_a 0 1
	update_b 2 3
	update_b 1 2
	updatepop_b 0 1
.d 1 3 iii
	jmp s34
.pe
.pb "toInt2;33"
.o 1 3 iii
s34
	push_b 1
	push_b 1
	eqI

	jmp_false else.10
	pop_a 1
	pop_b 2
.d 0 1 i
	rtn
else.10
	pushC '0'
	CtoI

	push_b 2
	push_a 0
	select CHAR 0 1
	CtoI

	subI

	pushI 0
	push_b 1
	ltI

	notB
	jmp_false else.11
	push_b 0
	pushI 9
	ltI

	notB
	jmp_false else.11
	pushI 10
	push_b 4
	mulI

	push_b 1
	update_b 1 2
	updatepop_b 0 1
	addI

	pushI 1
	push_b 3
	addI

	push_a 0
	push_b 2
	updatepop_a 0 1
	update_b 2 5
	update_b 1 4
	updatepop_b 0 3
.d 1 3 iii
	jmp s34
else.11
	pop_a 1
	pop_b 4
	pushI 0
.d 0 1 i
	rtn
.pe
.export e_StdInt_stoInt;22
.descexp e_StdInt_dtoInt;22 e_StdInt_ntoInt;22 e_StdInt_ltoInt;22 1 0 "toInt;22"
.pb "toInt;22"
.o 2 0
e_StdInt_itoInt;22
	pop_a 1
	pushR_a 0
	pop_a 1
.d 0 1 r
	jmp s23
.pld
.ai 1 _ e_StdInt_itoInt;22
.o 2 0
e_StdInt_ltoInt;22
	pop_a 1
.d 1 0
	jsr ea23
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dtoInt;22
.o 1 0
e_StdInt_ntoInt;22
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea23
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea23
	jsr_eval 0
	pushR_a 0
	pop_a 1
.o 0 1 r
e_StdInt_stoInt;22
.o 0 1 r
s23
.inline toInt;22
	RtoI
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_stoInt;21
.descexp e_StdInt_dtoInt;21 e_StdInt_ntoInt;21 e_StdInt_ltoInt;21 1 0 "toInt;21"
.pb "toInt;21"
.o 2 0
e_StdInt_itoInt;21
	pop_a 1
	pushI_a 0
	pop_a 1
.d 0 1 i
	jmp s22
.pld
.ai 1 _ e_StdInt_itoInt;21
.o 2 0
e_StdInt_ltoInt;21
	pop_a 1
.d 1 0
	jsr ea22
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dtoInt;21
.o 1 0
e_StdInt_ntoInt;21
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea22
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea22
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_stoInt;21
.o 0 1 i
s22
.inline toInt;21
	no_op
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_stoInt;20
.descexp e_StdInt_dtoInt;20 e_StdInt_ntoInt;20 e_StdInt_ltoInt;20 1 0 "toInt;20"
.pb "toInt;20"
.o 2 0
e_StdInt_itoInt;20
	pop_a 1
	pushC_a 0
	pop_a 1
.d 0 1 c
	jmp s21
.pld
.ai 1 _ e_StdInt_itoInt;20
.o 2 0
e_StdInt_ltoInt;20
	pop_a 1
.d 1 0
	jsr ea21
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dtoInt;20
.o 1 0
e_StdInt_ntoInt;20
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea21
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea21
	jsr_eval 0
	pushC_a 0
	pop_a 1
.o 0 1 c
e_StdInt_stoInt;20
.o 0 1 c
s21
.inline toInt;20
	CtoI
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_sisOdd;19
.descexp e_StdInt_disOdd;19 e_StdInt_nisOdd;19 e_StdInt_lisOdd;19 1 0 "isOdd;19"
.pb "isOdd;19"
.o 2 0
e_StdInt_iisOdd;19
	pop_a 1
	pushI_a 0
	pop_a 1
.d 0 1 i
	jmp s20
.pld
.ai 1 _ e_StdInt_iisOdd;19
.o 2 0
e_StdInt_lisOdd;19
	pop_a 1
.d 1 0
	jsr ea20
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_disOdd;19
.o 1 0
e_StdInt_nisOdd;19
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea20
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea20
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_sisOdd;19
.o 0 1 i
s20
.inline isOdd;19
	pushI 1
	and%
	pushI 0
	eqI
	notB
.end

.d 0 1 b
	rtn
.pe
.export e_StdInt_s~;15
.descexp e_StdInt_d~;15 e_StdInt_n~;15 e_StdInt_l~;15 1 0 "~;15"
.pb "~;15"
.o 2 0
e_StdInt_i~;15
	pop_a 1
	pushI_a 0
	pop_a 1
.d 0 1 i
	jsr s16
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 1 _ e_StdInt_i~;15
.o 2 0
e_StdInt_l~;15
	pop_a 1
.d 1 0
	jsr ea16
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_d~;15
.o 1 0
e_StdInt_n~;15
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea16
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea16
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_s~;15
.o 0 1 i
s16
.inline ~;15
	negI
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_ssign;14
.descexp e_StdInt_dsign;14 e_StdInt_nsign;14 e_StdInt_lsign;14 1 0 "sign;14"
.pb "sign;14"
.o 2 0
e_StdInt_isign;14
	pop_a 1
	pushI_a 0
	pop_a 1
.d 0 1 i
	jmp s15
.pld
.ai 1 _ e_StdInt_isign;14
.o 2 0
e_StdInt_lsign;14
	pop_a 1
.d 1 0
	jsr ea15
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dsign;14
.o 1 0
e_StdInt_nsign;14
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea15
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea15
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_ssign;14
.o 0 1 i
s15
	pushI 0
	push_b 1
	eqI

	jmp_false else.13
	pop_b 1
	pushI 0
.d 0 1 i
	rtn
else.13
	pushI 0
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	ltI

	jmp_false else.14
	pushI -1
.d 0 1 i
	rtn
else.14
	pushI 1
.d 0 1 i
	rtn
.pe
.export e_StdInt_s==;16
.descexp e_StdInt_d==;16 e_StdInt_n==;16 e_StdInt_l==;16 2 0 "==;16"
.pb "==;16"
.o 3 0
e_StdInt_i==;16
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jmp s17
.pld
.ai 0 a17 e_StdInt_i==;16
.o 2 0
e_StdInt_l==;16
	repl_args 1 1
.o 2 0
.pn
a17
.d 2 0
	jsr ea17
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d==;16
.o 1 0
e_StdInt_n==;16
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea17
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea17
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s==;16
.o 0 2 ii
s17
.inline ==;16
	eqI
.end

.d 0 1 b
	rtn
.pe
.export e_StdInt_sabs;13
.descexp e_StdInt_dabs;13 e_StdInt_nabs;13 e_StdInt_labs;13 1 0 "abs;13"
.pb "abs;13"
.o 2 0
e_StdInt_iabs;13
	pop_a 1
	pushI_a 0
	pop_a 1
.d 0 1 i
	jsr s14
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 1 _ e_StdInt_iabs;13
.o 2 0
e_StdInt_labs;13
	pop_a 1
.d 1 0
	jsr ea14
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dabs;13
.o 1 0
e_StdInt_nabs;13
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea14
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea14
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_sabs;13
.o 0 1 i
s14
	pushI 0
	push_b 1
	ltI

	jmp_false else.15
	push_b 0
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	subI

.d 0 1 i
	rtn
else.15
.d 0 1 i
	rtn
.pe
.export e_StdInt_s^;12
.descexp e_StdInt_d^;12 e_StdInt_n^;12 e_StdInt_l^;12 2 0 "^;12"
.pb "^;12"
.o 3 0
e_StdInt_i^;12
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jsr s13
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 0 a13 e_StdInt_i^;12
.o 2 0
e_StdInt_l^;12
	repl_args 1 1
.o 2 0
.pn
a13
.d 2 0
	jsr ea13
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d^;12
.o 1 0
e_StdInt_n^;12
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea13
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea13
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s^;12
.o 0 2 ii
s13
	pushI 0
	push_b 2
	ltI

	jmp_false else.16
	buildAC "^ (Int) called with negative power argument"
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	pushI_a 0
	pop_a 1
.d 0 1 i
	rtn
else.16
	push_b 1
	push_b 1
	update_b 1 3
	updatepop_b 0 2
.d 0 2 ii
	jmp s32
.pe
.export e_StdInt_s<;17
.descexp e_StdInt_d<;17 e_StdInt_n<;17 e_StdInt_l<;17 2 0 "<;17"
.pb "<;17"
.o 3 0
e_StdInt_i<;17
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jmp s18
.pld
.ai 0 a18 e_StdInt_i<;17
.o 2 0
e_StdInt_l<;17
	repl_args 1 1
.o 2 0
.pn
a18
.d 2 0
	jsr ea18
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d<;17
.o 1 0
e_StdInt_n<;17
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea18
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea18
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s<;17
.o 0 2 ii
s18
.inline <;17
	ltI
.end

.d 0 1 b
	rtn
.pe
.pb "pow;31"
.o 0 2 ii
s32
	eqI_b 0 1
	jmp_true case.17
	jmp case.18
case.17
	pop_b 2
	pushI 1
.d 0 1 i
	rtn
case.18
	push_b 1
	pushI 1
	and%
	pushI 0
	eqI

	jmp_false else.19
	pushI 1
	push_b 2
	shiftr%

	push_b 1
	update_b 1 3
	updatepop_b 0 2
.d 0 2 ii
	jsr s32
.o 0 1 i
	push_b 0
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	mulI

.d 0 1 i
	rtn
else.19
	pushI 1
	push_b 2
	shiftr%

	push_b 1
.d 0 2 ii
	jsr s32
.o 0 1 i
	push_b 0
	push_b 2
	mulI

	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 4
	updatepop_b 0 3
	mulI

.d 0 1 i
	rtn
.pe
.export e_StdInt_sisEven;18
.descexp e_StdInt_disEven;18 e_StdInt_nisEven;18 e_StdInt_lisEven;18 1 0 "isEven;18"
.pb "isEven;18"
.o 2 0
e_StdInt_iisEven;18
	pop_a 1
	pushI_a 0
	pop_a 1
.d 0 1 i
	jmp s19
.pld
.ai 1 _ e_StdInt_iisEven;18
.o 2 0
e_StdInt_lisEven;18
	pop_a 1
.d 1 0
	jsr ea19
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_disEven;18
.o 1 0
e_StdInt_nisEven;18
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea19
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea19
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_sisEven;18
.o 0 1 i
s19
.inline isEven;18
	pushI 1
	and%
	pushI 0
	eqI
.end

.d 0 1 b
	rtn
.pe
.export e_StdInt_sone;11
.descexp e_StdInt_done;11 e_StdInt_none;11 e_StdInt_lone;11 0 0 "one;11"
.pb "one;11"
.o 1 0
e_StdInt_ione;11
	pop_a 1
.d 0 0
	jsr s12
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
e_StdInt_lone;11
	halt
.pd
.n 0 e_StdInt_done;11
.o 1 0
e_StdInt_none;11
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea12
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
.pn
ea12
.o 0 0
e_StdInt_sone;11
.o 0 0
s12
.inline one;11
	pushI 1
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_s/;10
.descexp e_StdInt_d/;10 e_StdInt_n/;10 e_StdInt_l/;10 2 0 "/;10"
.pb "/;10"
.o 3 0
e_StdInt_i/;10
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jsr s11
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 0 a11 e_StdInt_i/;10
.o 2 0
e_StdInt_l/;10
	repl_args 1 1
.o 2 0
.pn
a11
.d 2 0
	jsr ea11
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d/;10
.o 1 0
e_StdInt_n/;10
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea11
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea11
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s/;10
.o 0 2 ii
s11
.inline /;10
	divI
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_s*;9
.descexp e_StdInt_d*;9 e_StdInt_n*;9 e_StdInt_l*;9 2 0 "*;9"
.pb "*;9"
.o 3 0
e_StdInt_i*;9
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jsr s10
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 0 a10 e_StdInt_i*;9
.o 2 0
e_StdInt_l*;9
	repl_args 1 1
.o 2 0
.pn
a10
.d 2 0
	jsr ea10
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d*;9
.o 1 0
e_StdInt_n*;9
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea10
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea10
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s*;9
.o 0 2 ii
s10
.inline *;9
	mulI
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_szero;8
.descexp e_StdInt_dzero;8 e_StdInt_nzero;8 e_StdInt_lzero;8 0 0 "zero;8"
.pb "zero;8"
.o 1 0
e_StdInt_izero;8
	pop_a 1
.d 0 0
	jsr s9
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
e_StdInt_lzero;8
	halt
.pd
.n 0 e_StdInt_dzero;8
.o 1 0
e_StdInt_nzero;8
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea9
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
.pn
ea9
.o 0 0
e_StdInt_szero;8
.o 0 0
s9
.inline zero;8
	pushI 0
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_s-;7
.descexp e_StdInt_d-;7 e_StdInt_n-;7 e_StdInt_l-;7 2 0 "-;7"
.pb "-;7"
.o 3 0
e_StdInt_i-;7
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jsr s8
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 0 a8 e_StdInt_i-;7
.o 2 0
e_StdInt_l-;7
	repl_args 1 1
.o 2 0
.pn
a8
.d 2 0
	jsr ea8
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d-;7
.o 1 0
e_StdInt_n-;7
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea8
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea8
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s-;7
.o 0 2 ii
s8
.inline -;7
	subI
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_s+;6
.descexp e_StdInt_d+;6 e_StdInt_n+;6 e_StdInt_l+;6 2 0 "+;6"
.pb "+;6"
.o 3 0
e_StdInt_i+;6
	pop_a 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	jsr s7
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pld
.ai 0 a7 e_StdInt_i+;6
.o 2 0
e_StdInt_l+;6
	repl_args 1 1
.o 2 0
.pn
a7
.d 2 0
	jsr ea7
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d+;6
.o 1 0
e_StdInt_n+;6
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea7
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea7
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s+;6
.o 0 2 ii
s7
.inline +;6
	addI
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_sbitnot
.descexp e_StdInt_dbitnot e_StdInt_nbitnot e_StdInt_lbitnot 1 0 "bitnot"
.pb "bitnot"
.pld
.o 2 0
e_StdInt_lbitnot
	pop_a 1
.d 1 0
	jsr ea6
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 1 e_StdInt_dbitnot
.o 1 0
e_StdInt_nbitnot
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea6
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
.pn
ea6
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdInt_sbitnot
.o 0 1 i
s6
.inline bitnot
	not%
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_s>>
.descexp e_StdInt_d>> e_StdInt_n>> e_StdInt_l>> 2 0 ">>"
.pb ">>"
.pld
.a 0 a5
.o 2 0
e_StdInt_l>>
	repl_args 1 1
.o 2 0
.pn
a5
.d 2 0
	jsr ea5
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d>>
.o 1 0
e_StdInt_n>>
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea5
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea5
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s>>
.o 0 2 ii
s5
.inline >>
	shiftr%
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_s<<
.descexp e_StdInt_d<< e_StdInt_n<< e_StdInt_l<< 2 0 "<<"
.pb "<<"
.pld
.a 0 a4
.o 2 0
e_StdInt_l<<
	repl_args 1 1
.o 2 0
.pn
a4
.d 2 0
	jsr ea4
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_d<<
.o 1 0
e_StdInt_n<<
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea4
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea4
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_s<<
.o 0 2 ii
s4
.inline <<
	shiftl%
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_sbitxor
.descexp e_StdInt_dbitxor e_StdInt_nbitxor e_StdInt_lbitxor 2 0 "bitxor"
.pb "bitxor"
.pld
.a 0 a3
.o 2 0
e_StdInt_lbitxor
	repl_args 1 1
.o 2 0
.pn
a3
.d 2 0
	jsr ea3
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_dbitxor
.o 1 0
e_StdInt_nbitxor
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea3
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea3
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_sbitxor
.o 0 2 ii
s3
.inline bitxor
	xor%
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_sbitand
.descexp e_StdInt_dbitand e_StdInt_nbitand e_StdInt_lbitand 2 0 "bitand"
.pb "bitand"
.pld
.a 0 a2
.o 2 0
e_StdInt_lbitand
	repl_args 1 1
.o 2 0
.pn
a2
.d 2 0
	jsr ea2
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_dbitand
.o 1 0
e_StdInt_nbitand
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea2
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea2
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_sbitand
.o 0 2 ii
s2
.inline bitand
	and%
.end

.d 0 1 i
	rtn
.pe
.export e_StdInt_sbitor
.descexp e_StdInt_dbitor e_StdInt_nbitor e_StdInt_lbitor 2 0 "bitor"
.pb "bitor"
.pld
.a 0 a1
.o 2 0
e_StdInt_lbitor
	repl_args 1 1
.o 2 0
.pn
a1
.d 2 0
	jsr ea1
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdInt_dbitor
.o 1 0
e_StdInt_nbitor
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea1
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea1
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
e_StdInt_sbitor
.o 0 2 ii
s1
.inline bitor
	or%
.end

.d 0 1 i
	rtn
.pe
