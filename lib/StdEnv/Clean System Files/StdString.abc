.comp 920 0001100100100
.start _nostart_
.depend "StdOverloaded"
.depend "StdString"
.endinfo
.module m_StdString "StdString"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.export e_StdString_s+++;11
.descexp e_StdString_d+++;11 e_StdString_n+++;11 e_StdString_l+++;11 2 0 "+++;11"
.pb "+++;11"
.o 3 0
e_StdString_i+++;11
	pop_a 1
	push_array 1
	push_array 1
	update_a 1 3
	update_a 0 2
	pop_a 2
.d 2 0
	jsr s12
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pld
.ai 0 a12 e_StdString_i+++;11
.o 2 0
e_StdString_l+++;11
	repl_args 1 1
.o 2 0
.pn
a12
.d 2 0
	jsr ea12
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 2 e_StdString_d+++;11
.o 1 0
e_StdString_n+++;11
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea12
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 2 0
.pn
ea12
	jsr_eval 1
	jsr_eval 0
	push_array 1
	push_array 1
	update_a 1 3
	update_a 0 2
	pop_a 2
.o 2 0
e_StdString_s+++;11
.o 2 0
s12
.inline +++;11
.d 2 0
	jsr catAC
.o 1 0
.end

.d 1 0
	rtn
.pe
.export e_StdString_s%;10
.descexp e_StdString_d%;10 e_StdString_n%;10 e_StdString_l%;10 2 0 "%;10"
.pb "%;10"
.o 2 2 ii
e_StdString_i%;10
	pop_a 1
	push_array 0
	update_a 0 1
	pop_a 1
.d 1 2 ii
	jsr s11
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pld
.ai 0 a11 e_StdString_i%;10
.o 2 0
e_StdString_l%;10
	repl_args 1 1
.o 2 0
.pn
a11
.d 2 0
	jsr ea11
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 2 e_StdString_d%;10
.o 1 0
e_StdString_n%;10
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea11
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 2 0
.pn
ea11
	push_a 1
	jsr_eval 0
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	jsr_eval 2
	pushI_a 1
	pushI_a 0
	push_array 2
	update_a 0 4
	pop_a 4
.o 1 2 ii
e_StdString_s%;10
.o 1 2 ii
s11
.inline %;10
.d 1 2 ii
	jsr sliceAC
.o 1 0
.end

.d 1 0
	rtn
.pe
.export e_StdString_stoString;9
.descexp e_StdString_dtoString;9 e_StdString_ntoString;9 e_StdString_ltoString;9 1 0 "toString;9"
.pb "toString;9"
.o 2 0
e_StdString_itoString;9
	pop_a 1
	push_array 0
	update_a 0 1
	pop_a 1
.d 1 0
	jmp s10
.pld
.ai 1 _ e_StdString_itoString;9
.o 2 0
e_StdString_ltoString;9
	pop_a 1
.d 1 0
	jsr ea10
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 1 e_StdString_dtoString;9
.o 1 0
e_StdString_ntoString;9
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea10
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
.pn
ea10
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 1 0
e_StdString_stoString;9
.o 1 0
s10
.inline toString;9
	no_op
.end

.d 1 0
	rtn
.pe
.export e_StdString_stoString;8
.descexp e_StdString_dtoString;8 e_StdString_ntoString;8 e_StdString_ltoString;8 1 0 "toString;8"
.pb "toString;8"
.o 2 0
e_StdString_itoString;8
	pop_a 1
	pushB_a 0
	pop_a 1
.d 0 1 b
	jmp s9
.pld
.ai 1 _ e_StdString_itoString;8
.o 2 0
e_StdString_ltoString;8
	pop_a 1
.d 1 0
	jsr ea9
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 1 e_StdString_dtoString;8
.o 1 0
e_StdString_ntoString;8
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea9
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
.pn
ea9
	jsr_eval 0
	pushB_a 0
	pop_a 1
.o 0 1 b
e_StdString_stoString;8
.o 0 1 b
s9
.inline toString;8
.d 0 1 b
	jsr BtoAC
.o 1 0
.end

.d 1 0
	rtn
.pe
.export e_StdString_stoString;7
.descexp e_StdString_dtoString;7 e_StdString_ntoString;7 e_StdString_ltoString;7 1 0 "toString;7"
.pb "toString;7"
.o 2 0
e_StdString_itoString;7
	pop_a 1
	pushR_a 0
	pop_a 1
.d 0 1 r
	jmp s8
.pld
.ai 1 _ e_StdString_itoString;7
.o 2 0
e_StdString_ltoString;7
	pop_a 1
.d 1 0
	jsr ea8
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 1 e_StdString_dtoString;7
.o 1 0
e_StdString_ntoString;7
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea8
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
.pn
ea8
	jsr_eval 0
	pushR_a 0
	pop_a 1
.o 0 1 r
e_StdString_stoString;7
.o 0 1 r
s8
.inline toString;7
.d 0 1 r
	jsr RtoAC
.o 1 0
.end

.d 1 0
	rtn
.pe
.export e_StdString_stoString;6
.descexp e_StdString_dtoString;6 e_StdString_ntoString;6 e_StdString_ltoString;6 1 0 "toString;6"
.pb "toString;6"
.o 2 0
e_StdString_itoString;6
	pop_a 1
	pushC_a 0
	pop_a 1
.d 0 1 c
	jmp s7
.pld
.ai 1 _ e_StdString_itoString;6
.o 2 0
e_StdString_ltoString;6
	pop_a 1
.d 1 0
	jsr ea7
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 1 e_StdString_dtoString;6
.o 1 0
e_StdString_ntoString;6
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea7
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
.pn
ea7
	jsr_eval 0
	pushC_a 0
	pop_a 1
.o 0 1 c
e_StdString_stoString;6
.o 0 1 c
s7
.inline toString;6
	CtoAC
.end

.d 1 0
	rtn
.pe
.export e_StdString_stoString;5
.descexp e_StdString_dtoString;5 e_StdString_ntoString;5 e_StdString_ltoString;5 1 0 "toString;5"
.pb "toString;5"
.o 2 0
e_StdString_itoString;5
	pop_a 1
	pushI_a 0
	pop_a 1
.d 0 1 i
	jmp s6
.pld
.ai 1 _ e_StdString_itoString;5
.o 2 0
e_StdString_ltoString;5
	pop_a 1
.d 1 0
	jsr ea6
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 1 e_StdString_dtoString;5
.o 1 0
e_StdString_ntoString;5
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea6
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
.pn
ea6
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_StdString_stoString;5
.o 0 1 i
s6
.inline toString;5
.d 0 1 i
	jsr ItoAC
.o 1 0
.end

.d 1 0
	rtn
.pe
.export e_StdString_sfromString;4
.descexp e_StdString_dfromString;4 e_StdString_nfromString;4 e_StdString_lfromString;4 1 0 "fromString;4"
.pb "fromString;4"
.o 2 0
e_StdString_ifromString;4
	pop_a 1
.d 1 0
	jsr s5
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pld
.ai 1 _ e_StdString_ifromString;4
.o 2 0
e_StdString_lfromString;4
	pop_a 1
.d 1 0
	jsr ea5
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 1 e_StdString_dfromString;4
.o 1 0
e_StdString_nfromString;4
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea5
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
.pn
ea5
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 1 0
e_StdString_sfromString;4
.o 1 0
s5
.inline fromString;4
	no_op
.end

.d 1 0
	rtn
.pe
.export e_StdString_s<;3
.descexp e_StdString_d<;3 e_StdString_n<;3 e_StdString_l<;3 2 0 "<;3"
.pb "<;3"
.o 3 0
e_StdString_i<;3
	pop_a 1
	push_array 1
	push_array 1
	update_a 1 3
	update_a 0 2
	pop_a 2
.d 2 0
	jmp s4
.pld
.ai 0 a4 e_StdString_i<;3
.o 2 0
e_StdString_l<;3
	repl_args 1 1
.o 2 0
.pn
a4
.d 2 0
	jsr ea4
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdString_d<;3
.o 1 0
e_StdString_n<;3
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea4
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea4
	jsr_eval 1
	jsr_eval 0
	push_array 1
	push_array 1
	update_a 1 3
	update_a 0 2
	pop_a 2
.o 2 0
e_StdString_s<;3
.o 2 0
s4
.inline <;3
.d 2 0
	jsr cmpAC
.o 0 1 i
	pushI 0
	gtI
.end

.d 0 1 b
	rtn
.pe
.export e_StdString_s==;2
.descexp e_StdString_d==;2 e_StdString_n==;2 e_StdString_l==;2 2 0 "==;2"
.pb "==;2"
.o 3 0
e_StdString_i==;2
	pop_a 1
	push_array 1
	push_array 1
	update_a 1 3
	update_a 0 2
	pop_a 2
.d 2 0
	jmp s3
.pld
.ai 0 a3 e_StdString_i==;2
.o 2 0
e_StdString_l==;2
	repl_args 1 1
.o 2 0
.pn
a3
.d 2 0
	jsr ea3
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.pd
.n 2 e_StdString_d==;2
.o 1 0
e_StdString_n==;2
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea3
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
.pn
ea3
	jsr_eval 1
	jsr_eval 0
	push_array 1
	push_array 1
	update_a 1 3
	update_a 0 2
	pop_a 2
.o 2 0
e_StdString_s==;2
.o 2 0
s3
.inline ==;2
.d 2 0
	jsr eqAC
.o 0 1 b	
.end

.d 0 1 b
	rtn
.pe
.export e_StdString_s:=
.descexp e_StdString_d:= e_StdString_n:= e_StdString_l:= 2 0 ":="
.pb ":="
.pld
.a 0 a2
.o 2 0
e_StdString_l:=
	repl_args 1 1
.o 2 0
.pn
a2
.d 2 0
	jsr ea2
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 2 e_StdString_d:=
.o 1 0
e_StdString_n:=
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea2
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 2 0
.pn
ea2
	push_a 1
	jsr_eval 0
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	jsr_eval 2
	pushC_a 1
	pushI_a 0
	push_array 2
	update_a 0 4
	pop_a 4
.o 1 2 ic
e_StdString_s:=
.o 1 2 ic
s2
.inline :=
.d 1 2 ic
	jsr updateAC
.o 1 0
.end

.d 1 0
	rtn
.pe
.export e_StdString_s+++.
.descexp e_StdString_d+++. e_StdString_n+++. e_StdString_l+++. 2 0 "+++"
.pb "+++"
.pld
.a 0 a1
.o 2 0
e_StdString_l+++.
	repl_args 1 1
.o 2 0
.pn
a1
.d 2 0
	jsr ea1
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.pd
.n 2 e_StdString_d+++.
.o 1 0
e_StdString_n+++.
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea1
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 2 0
.pn
ea1
	jsr_eval 1
	jsr_eval 0
	push_array 1
	push_array 1
	update_a 1 3
	update_a 0 2
	pop_a 2
.o 2 0
e_StdString_s+++.
.o 2 0
s1
.inline +++.
.d 2 0
	jsr catAC
.o 1 0
.end

.d 1 0
	rtn
.pe
